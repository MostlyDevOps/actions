---
name: Build-Promote-GitOps
# TEMPLATE source: https://github.com/BretFisher/github-actions-templates

on:
  push:
    branches:
      - main
    # don't rebuild image if someone only edited unrelated files
    paths-ignore:
      - 'README.md'
      - '.github/linters/**'
  pull_request:
    # don't rebuild image if someone only edited unrelated files
    paths-ignore:
      - 'README.md'
      - '.github/linters/**'

# cancel any previously-started, yet still active runs of this workflow on the same branch
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

permissions: { }

jobs:

  # run this job on every push to a PR
  # it will push images to GHCR, but not Docker Hub
  docker-build-pr:
    name: Call Build on PR
    if: github.event_name == 'pull_request'
    uses: mostlydevops/actions/.github/workflows/reusable-docker-build.yaml@main
    with:
      # DON'T login to or push to Docker Hub
      dockerhub-enable: false
      ghcr-enable: true
      push: true
      image-names: |
        ghcr.io/${{ github.repository }}

  # run this job on every push to the default branch (including merges and tags)
  # it will push images to GHCR and DockerHub
  # tags will also include ones like `stable-<date>-<sha>` and `latest`
  docker-build-merge:
    name: Call Build on Push
    # this if is filtered to only the main branch push event (see events at top)
    if: github.event_name == 'push'
    uses: mostlydevops/actions/.github/workflows/reusable-docker-build.yaml@main
    secrets:
      dockerhub-username: ${{ secrets.DOCKERHUB_USERNAME }}
      dockerhub-token: ${{ secrets.DOCKERHUB_TOKEN }}
    with:  
      dockerhub-enable: true
      ghcr-enable: true
      push: true
      image-names: |
        docker.io/${{ github.repository }}
        ghcr.io/${{ github.repository }}

  # this job runs after a push/merge to the default branch
  # it will create a PR on a *different* repo that has
  # Kustomize YAML, and will update the image tags to the new one
  # This is an example of a "promotion" workflow where once a new image
  # is created from the default_branch of an app, that a Kubernetes
  # environment YAML needs to be updated as well.
  # This will save humans the steps of looking up the new image tag
  # and creating a new PR to update the Kustomize YAML.
  # You could also change this to update a Helm chart values file.
  gitops-pr:
    name: Call GitOps PR
    if: github.event_name == 'push'
    needs: docker-build-pr
    uses: mostlydevops/actions/.github/workflows/reusable-gitops-pr.yaml
    secrets:
      ## github token with write access to the gitops repo
      github-token: ${{ secrets.GITOPS_TOKEN }}
      ## OPTIONAL. If this has a value, it'll notify a slack channel after PR is created
      # slack-token: ${{ secrets.SLACK_BOT_TOKEN }}
    with:
      # your gitops repo
      repo: mostlydevops/wordsmith-k8s
      ## The environment dir path, defaults to `environments`
      # environments-root-dir: environments
      ## FIXME: change to the subdirector of `environments-root-dir` that contains the kustomization.yaml
      environment-dir: production
      ## the image you just built that you want to change the tag for
      image: ghcr.io/${{ github.repository }}
      ## we grab the tag output from the docker build, based on "priority"
      ## see the reusable workflow for details
      tag: ${{ needs.docker-build-merge.outputs.image-tag }}
      ## OPTIONAL. Enable if slack-token is enabled above
      # slack-channel-id: ${{ vars.SLACK_CHANNEL_ID }}